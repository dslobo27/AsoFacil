// <auto-generated />
using System;
using AsoFacil.InfraStructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsoFacil.InfraStructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220717164112_asofacil-cargainicial")]
    partial class asofacilcargainicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsoFacil.Domain.Entities.Agendamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusAgendamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("StatusAgendamentoId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Anamnese", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ApresentaDoresCostas")
                        .HasColumnType("bit");

                    b.Property<bool>("ApresentaDoresMaos")
                        .HasColumnType("bit");

                    b.Property<bool>("ApresentaDoresOmbros")
                        .HasColumnType("bit");

                    b.Property<bool>("ApresentaDoresPunhos")
                        .HasColumnType("bit");

                    b.Property<bool>("ApresentaProblemaPsiquiatrico")
                        .HasColumnType("bit");

                    b.Property<bool>("ApresentaQuadroAnsiedade")
                        .HasColumnType("bit");

                    b.Property<bool>("ApresentaQuadroDepressao")
                        .HasColumnType("bit");

                    b.Property<bool>("ApresentaQuadroInsonia")
                        .HasColumnType("bit");

                    b.Property<bool>("Apto")
                        .HasColumnType("bit");

                    b.Property<bool>("Bebe")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoAtividadeFisica")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescricaoFaturaSofrida")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescricaoMotivoInternacao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescricaoMotivoReabilitacaoProfissionalINSS")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescricaoMotivoRecebeIndenizacao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescricaoProblemaAuditivo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescricaoProblemaVisao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("DiagnosticoCancer")
                        .HasColumnType("bit");

                    b.Property<bool>("EsteveInternado")
                        .HasColumnType("bit");

                    b.Property<bool>("FezAlgumaCirurgia")
                        .HasColumnType("bit");

                    b.Property<bool>("Fuma")
                        .HasColumnType("bit");

                    b.Property<bool>("JaEsteveAfastadoMaisQuinzeDias")
                        .HasColumnType("bit");

                    b.Property<bool>("JaPassouReabilitacaoProfissionalINSS")
                        .HasColumnType("bit");

                    b.Property<bool>("JaSofreuAcidenteTrabalho")
                        .HasColumnType("bit");

                    b.Property<string>("Local")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("MedicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MotivoAfastadoMaisQuinzeDias")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MotivoInapto")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.Property<bool>("PortadorDeficienciaAuditiva")
                        .HasColumnType("bit");

                    b.Property<bool>("PortadorDeficienciaFisica")
                        .HasColumnType("bit");

                    b.Property<bool>("PortadorDeficienciaMental")
                        .HasColumnType("bit");

                    b.Property<bool>("PortadorDeficienciaMultipla")
                        .HasColumnType("bit");

                    b.Property<bool>("PortadorDeficienciaVisual")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiDiabetes")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiDoencaCoracao")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiDoencaRins")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiHepatite")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiHernia")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiProblemaAuditivo")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiProblemaVisao")
                        .HasColumnType("bit");

                    b.Property<bool>("PraticaAtividadeFisica")
                        .HasColumnType("bit");

                    b.Property<int>("QuantosCigarrosDia")
                        .HasColumnType("int");

                    b.Property<bool>("RecebeIndenizacaoAcidenteOuDoencaOcupacional")
                        .HasColumnType("bit");

                    b.Property<bool>("SofreuAlgumaFratura")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.ToTable("Anamneses");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Candidato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnamneseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CargoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OrgaoEmissor")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RG")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("UF")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("AnamneseId")
                        .IsUnique();

                    b.HasIndex("CargoId");

                    b.HasIndex("DocumentoId")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("varchar");

                    b.HasKey("Id");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(18)
                        .HasColumnType("varchar(18)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("SolicitacaoAtivacaoEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoAtivacaoEmpresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Medico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CRM")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.SolicitacaoAtivacaoEmpresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusSolicitacaoAtivacaoEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StatusSolicitacaoAtivacaoEmpresaId");

                    b.ToTable("SolicitacoesAtivacaoEmpresas");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.StatusAgendamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("StatusAgendamentos");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.StatusSolicitacaoAtivacaoEmpresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("StatusSolicitacoesAtivacaoEmpresas");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.TipoUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MenuSistema")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("TiposUsuarios");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Senha")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("TipoUsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Agendamento", b =>
                {
                    b.HasOne("AsoFacil.Domain.Entities.Candidato", "Candidato")
                        .WithOne("Agendamento")
                        .HasForeignKey("AsoFacil.Domain.Entities.Agendamento", "CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsoFacil.Domain.Entities.Empresa", null)
                        .WithMany("Agendamentos")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("AsoFacil.Domain.Entities.StatusAgendamento", "StatusAgendamento")
                        .WithMany("Agendamentos")
                        .HasForeignKey("StatusAgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("StatusAgendamento");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Anamnese", b =>
                {
                    b.HasOne("AsoFacil.Domain.Entities.Medico", "Medico")
                        .WithMany("Anamneses")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Candidato", b =>
                {
                    b.HasOne("AsoFacil.Domain.Entities.Anamnese", "Anamnese")
                        .WithOne("Candidato")
                        .HasForeignKey("AsoFacil.Domain.Entities.Candidato", "AnamneseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsoFacil.Domain.Entities.Cargo", "Cargo")
                        .WithMany("Candidatos")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsoFacil.Domain.Entities.Documento", "Documento")
                        .WithOne("Candidato")
                        .HasForeignKey("AsoFacil.Domain.Entities.Candidato", "DocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsoFacil.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Candidatos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anamnese");

                    b.Navigation("Cargo");

                    b.Navigation("Documento");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Empresa", b =>
                {
                    b.HasOne("AsoFacil.Domain.Entities.SolicitacaoAtivacaoEmpresa", "SolicitacaoAtivacaoEmpresa")
                        .WithMany("Empresas")
                        .HasForeignKey("SolicitacaoAtivacaoEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolicitacaoAtivacaoEmpresa");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.SolicitacaoAtivacaoEmpresa", b =>
                {
                    b.HasOne("AsoFacil.Domain.Entities.StatusSolicitacaoAtivacaoEmpresa", "StatusSolicitacaoAtivacaoEmpresa")
                        .WithMany("SolicitacoesAtivacoesEmpresas")
                        .HasForeignKey("StatusSolicitacaoAtivacaoEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusSolicitacaoAtivacaoEmpresa");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("AsoFacil.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("AsoFacil.Domain.Entities.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Anamnese", b =>
                {
                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Candidato", b =>
                {
                    b.Navigation("Agendamento");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Cargo", b =>
                {
                    b.Navigation("Candidatos");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Documento", b =>
                {
                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Candidatos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.Medico", b =>
                {
                    b.Navigation("Anamneses");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.SolicitacaoAtivacaoEmpresa", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.StatusAgendamento", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.StatusSolicitacaoAtivacaoEmpresa", b =>
                {
                    b.Navigation("SolicitacoesAtivacoesEmpresas");
                });

            modelBuilder.Entity("AsoFacil.Domain.Entities.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
